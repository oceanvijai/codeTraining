public class RepeatingSubSequence {
    /**
     * Given a string, find if there is any sub-sequence that repeats itself. A
     * sub-sequence of a string is defined as a sequence of characters generated by
     * deleting some characters in the string without changing the order of the
     * remaining characters.
     * 
     * abab ------> yes, ab is repeated. So, return 1.
     * 
     * abba ------> No, a and b follow different order. So, return 0.
     */

    public int anytwo(String A) {
        int[][] SS = new int[A.length()+1][A.length()+1];
        
        
        
        for(int i = 1; i <= A.length(); i++){
           for(int j = 1; j <= A.length(); j++){
                
                if(i != j && A.charAt(i-1) == A.charAt(j-1)){
                    SS[i][j] = 1 + SS[i-1][j-1];
                }else{
                    SS[i][j] = Math.max(SS[i-1][j],SS[j-1][i]);
                }
                
            } 
        }
        
        return SS[A.length()][A.length()] > 1 ? 1 : 0;
        
    }
}