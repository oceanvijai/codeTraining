BFS : O(v+E) - v - vertices, E - edges
    How ? 
    -   Inside the while loop, we pop each vertex V times. 
    -   Then after that we iterate all the edges, that is d (degree of each vertex), which in total is E
    -   Or, it can we written as V + SUM_OF_DEGREE(V), SUM_OF_DEGREE(V) will be total edges
    Ex: the code is like this,

        while(!queue.isEmpty()){
            pop the next vertex

            for(All the edges){
                // do some constant time work
                // 2E for undirected graph and E for directed graph
            }
        }

        So the (pop the next vertex) will be executed a total of V times
        The (do some constant time work) will be executed a total of E times
        Since, both are in same level, V + E
    
The parent relation with the map is can be used to find the shortest path

Properties:
    -   In an undirected graph, it is used to find the shortest path
    -   Find number of connected components
    -   Find a bipartite graph
    -   network flow

Applications
    - Web crawling
    - Social network - friend find
    - grabage collection
    - Solving puzzle and games
    - Find a bipartite graph

bipartite - if we can color the graph with two colors without conflicts
          - can be solved using BFS
Applications:
    - Students and the course they take
    - Sex replationship - male and female sex replationship

https://www.youtube.com/watch?v=s-CYnVz-uh4&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=13
https://www.youtube.com/watch?v=g5vF8jscteo&list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&index=12
