BFS or DFS

Inorder || preorder || post order

use stack and queue with mix of the above traversals

-------------------------------------------------------------------------------------------------------
In validating BST, Inorder with duplicates is a issue, sicnce we dont know from which leaf it came from

Inorder property : Will mostly give you the same result for different tree structure in case of BST
pre porder : will give you different result for same BST with different structure, which is good for classification
port order also gives different result for same BST with different structure

When trying brute force:
Do a trvaesal from the current node to the end.
And then ask the left to do the same
And then the right to do the same

----------------------------------------------------------------------------------------------------------
Segment tree
    Given an array, find the sum of a range
    We can ofcourse iterate and find the value
    But, instead we can create a heap kind of tree structure and store the sum in the nodes

----------------------------------------------------------------------------------------------------------
Serialize and deserialize BST
    To Serialize a BST, only preorder or postorder is enough
    To Serialize a BT, we need preorder with null/-1 elements
Validate if the array is preorder for a BST

----------------------------------------------------------------------------------------------------------
Selft balancing trees
    AVL and red black tree
    - Tree map uses redblack tree
