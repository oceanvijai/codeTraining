Creations:
----------

byte -> 8bit -> -128 to 127
short -> 16bit -> -32,768 to 32,767 

Integer.MIN_VALUE = -2_147_483_648, -2^32 
Integer.MAX_VALUE = 2_147_483_647 (2 billion, 200cr)

long -> -2^63 - 2^63-1

scientific notation for 
3e2 = 300.0 (3*10^2)
3.1e2 = 310.0
3.1e-1 = 0.31

hexa decimal (prefix '0x')
0xf = 15
 
Conversions:
----------
int to char -> 
char to int -> Character.getNumericValue('2'); or '0'-'2'

Integer to String -> String.valueOf(123);
String to Integer  -> Integer.parseInt("123");

Long to integer -> Math.toIntExact or myLong.intValue();


Collections:
----------
int[] arr = new int[]{1,2,3};
Character[] c = new char[]{'a','b'}; // compile error




Sorting:
----------





Math:
----------

abs(-34.5)
ceil(2.17)
floor(3.14)
min(x, -4), max(3 . 14, y)
pow(2.71, 3 . 14)
sqrt(225)


loops:
----------


Random:
----------

nextlnt(16)
nextlnt() 
nextBoolean() 
nextDouble() (which returns a value in [0, 1))

Bits:
-----

To count the number of set bit in an integer:
Integer.bitCount(i);

Java integer to binary
Integer.toBinaryString(l)

Java binary to integer
Integer.parseInt("1010",2) // But will be in trimmed format

