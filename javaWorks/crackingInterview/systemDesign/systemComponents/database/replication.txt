For availability & fault tolerance we need to duplicate data

The challenge is to keep the replicas consistent

consistent - The client should feel as if there is only one copy of the data

Strong consistent model - Where all copies are updated before commiting
  - Primary - backup model provides stong consistency 
  
Eventual consistency - Where the replicas will eventuallu get consistent

Read you write consistency - The client must be always able to read what it wrote

casual consistency - Writes with a causing order are seen by all process in the same order
  
  
Active & passive replication

Active - Where each replicas EXECUTE the changes individually and apply it to their copy
  - Also called state machine replication
  - useful when
    - If the state update is large which is very big to send it accros, in that case better compute it quickly on each replicas
Passive - Where only primary EXECUTE the changes and asks the replicas to just update their copies with new value
  - Useful when
    - When the computation is too expensive so you can compute it once and share it with others
    - If the execution involves generating random number, then better use passive
