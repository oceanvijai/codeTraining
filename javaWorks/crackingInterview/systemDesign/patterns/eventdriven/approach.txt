The flow of date is based on responding to the events created in a system. Mostly asynchronous.
When an event is created and communicated to the downstream systems, the systems needs to process them in sequence or parallel and produce desired results.

So lets see some concepts on how events driven system can
Create events
Communicate events
Processe events at scale
Error handling
Transaction handling
Manage - deploying and developing

Creational patterns:
-------------------
Types of messages:
Command 
    - Send a command instruction and expect the receiver to take actions on the same
Document
    - Used to send data between sender and receiver
Event
    - Basically sending a notification
    - Notification - only
    - Notification + metadata
    - Notification + data (ECST)

Event Carried State Transfer (ECST)
    - Events holds the state which other services can pick up and update their local state.
    - When to use ???
    - Drawbacks ???

Command Query Response Segregation (CQRS)
    - Seperate the command and query events
    - When to use ???
    - Drawbacks ???

Change Data Capture (CDC)
    - To capture and process changes made to a database
    - When to use ???
    - Drawbacks ???

Event Sourcing
    - Capturing all changes to an applicationâ€™s state as a sequence of events
    - This sequence of events is used to build and rebuild the state of the application
    - When to use ???
    - Drawbacks ???



Communication Patterns:
-----------------------

Publish subscribe:
    - Publisher is decoupled for the receiver via an intermidiate 
    - One-to-many model
    - Most often used in event driven systems
    - When to use ???
    - Tools
        - Kafka


Point-to-point:
    - Deliver to a specific receipient
    - Many sender can send msg to a single receipient
    - Many to one model
    - When to use ??
    - Tools ???


Request-Reply:
    - Its a two way communication
    - The sender can use pub/sub or point-to-point to send a request
    - But the reply must be sent back to a point-to-point queue since the reply msg is intended for a specific system
    - When to use ??
    - Tools ???

Event-streaming:
    - Continuous delivery of events to interested parties
    - Realtime processing of events
    - The ability to build instant insights and take immediate actions
    - When to use
        - fraud detection, predictive maintenance, and IoT systems
    - Tools ???

Processing pattern:
-------------------

Hierarchical Topics:
    - Set of topics of interest is listened by the consumers to process them
    - This mainly focuses on the goof practices of creating and using topics
    - When to use


Event Filtering:
    - Processing only the events of interest
    - Filtering can occur both in client and broker side
    - Broker side
        - Subscription based on rules
        - Good for performance and network bandwidth
    - Client side
        - Simplicity & flexible and complex filtering patterns

Guaranteed Delivery
    - Important concept in event-driven architecture
    - prevent event loss or omission during transmission
    - Both while producing and consuming

        

