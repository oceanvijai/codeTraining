Like for say,

scalability:
    Asynchronous processing
    caching
        Caching at all level like client, middle, data store, network
    message queue
    multi threading
    partition of data and processing servers (load balancing)
    seperate compute scalability from fetch/distribution scalability (facebook live)

Consistency:
    Strong Consistency
    Eventual Consistency
    Consenses protocols

availability:
    Failovers
    Replication
        Master slave replication 
        Master master replication
        Budy replication

Fault tolerence:
    Redendency
        Not same as replication. One exact same copy is maintined to make sure if one goes down another can serve

Peer to peer communcation

Event driven systems

Async queing system
    - kafka
    - DB as queue
    
Sharding

Caching

Reactive 

CQRS

MapReduce




